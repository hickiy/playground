/* index.js generated by Svelte v3.59.1 */
import {
	SvelteComponent,
	append,
	append_styles,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "../internal.js";

function add_css(target) {
	append_styles(target, "svelte-1tky8bj", "main.svelte-1tky8bj{text-align:center;padding:1em;max-width:240px;margin:0 auto}h1.svelte-1tky8bj{color:#ff3e00;text-transform:uppercase;font-size:4em;font-weight:100}@media(min-width: 640px){main.svelte-1tky8bj{max-width:none}}");
}

function create_fragment(ctx) {
	let main;
	let h1;
	let t0;
	let t1;
	let t2;
	let t3;
	let button;
	let mounted;
	let dispose;

	return {
		c() {
			main = element("main");
			h1 = element("h1");
			t0 = text("Hello ");
			t1 = text(/*name*/ ctx[0]);
			t2 = text("!");
			t3 = space();
			button = element("button");
			button.textContent = "更新世界的名称";
			attr(h1, "class", "svelte-1tky8bj");
			attr(main, "class", "svelte-1tky8bj");
		},
		m(target, anchor) {
			insert(target, main, anchor);
			append(main, h1);
			append(h1, t0);
			append(h1, t1);
			append(h1, t2);
			append(main, t3);
			append(main, button);

			if (!mounted) {
				dispose = listen(button, "click", /*update*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*name*/ 1) set_data(t1, /*name*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(main);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let name = "world";

	function update() {
		$$invalidate(0, name = "world11111");
	}

	return [name, update];
}

class Index extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {}, add_css);
	}
}

export default Index;